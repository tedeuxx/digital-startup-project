name: tadeumendonca.io
on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Terraform action to perform'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy
  push:
    branches:
      - main
    paths:
      - '.github/**'
      - 'terraform/**'
      - 'src/**'
  pull_request:
    branches:
      - main
    paths:
      - '.github/**'
      - 'terraform/**'
      - 'src/**'

jobs:
  terraform:
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.3
          cli_config_credentials_token: ${{ secrets.TF_TOKEN_APP_TERRAFORM_IO }}
      
      - name: Terraform fmt
        id: fmt
        working-directory: terraform
        run: terraform fmt -check -recursive

      - name: Terraform int
        id: init
        working-directory: terraform
        run: terraform init -input=false

      - name: Terraform validate
        id: validate
        working-directory: terraform
        run: terraform validate

      - name: Terraform plan
        id: plan
        if: ${{ (github.event_name == 'workflow_dispatch' && github.event.inputs.action == 'apply') || github.event_name == 'push' }}
        working-directory: terraform
        run: |
          set -e

          # Terraform plan
          terraform plan -out=tfplan.out -compact-warnings -var-file=./env/main.tfvars | tee plan_output.log

          # Format sysout
          sed -r "s:\x1B\[[0-9;]*[mK]::g" plan_output.log > plan_clean.log

          # Parse sysout
          if grep -Fq "No changes. Your infrastructure matches the configuration." plan_clean.log; then
            echo "âœ… Infra up-to-date: no changes"
            echo "no_changes=true" >> "$GITHUB_OUTPUT"
          else
            echo "ðŸ”§ Infra will change"
            echo "no_changes=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Terraform apply
        id: apply
        if: ${{ github.event.inputs.action != 'destroy' && steps.plan.outputs.no_changes == 'false'}}
        working-directory: terraform
        run: terraform apply -auto-approve tfplan.out
        
      - name: Terraform destroy
        id: destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        working-directory: terraform
        run: terraform destroy -auto-approve -var-file=./env/main.tfvars